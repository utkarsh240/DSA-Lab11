//WAP to do the following:
//a. Engueue
//b. Dequeue

#include <stdio.h>
#include <stdlib.h>

#define MAX 5

int queue[MAX];
int front = -1;
int rear = -1;

void enqueue(int);
int dequeue();
void display();

int main()
{
    int choice, item;
    while (1)
    {
        printf(" 1. Enqueue 2. Dequeue 3. Display 4. Exit ");
        printf(" Enter your choice: ");
        scanf("%d", &choice);
        switch (choice)
        {
        case 1:
            printf(" Enter the item to be inserted: ");
            scanf("%d", &item);
            enqueue(item);
            break;

        case 2:

            item = dequeue();
            if (item == -1)
                printf(" Queue is empty ");
            else
                printf(" The deleted item is %d ", item);
            break;


        }
    }
}

void enqueue(int item)
{
    if (rear == MAX - 1)
    {
        printf(" Queue is full ");
        return;
    }
    if (front == -1)
        front = 0;
    rear = rear + 1;
    queue[rear] = item;
}

int dequeue()
{
    int item;
    if (front == -1 || front > rear)
    {
        printf(" Queue is empty ");
        return -1;
    }
    item = queue[front];
    front = front + 1;
    return item;
}

void display()
{
    int i;
    if (front == -1)
        printf(" Queue is empty ");
    else
    {
        printf(" Queue is: ");
        for (i = front; i <= rear; i++)
            printf(" %d ", queue[i]);
    }
}



OUTPUT

1. Enqueue 2. Dequeue 3. Display 4. Exit  Enter your choice: 1
 Enter the item to be inserted: 4
 Display 4
