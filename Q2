//WAP to implement double ended queue-input restricted, output restricted.

#include<stdio.h>
#include<stdlib.h>
#define MAX 5

int queue[MAX];
int front=-1,rear=-1;

void insert_rear()
{
    int item;
    if(rear==MAX-1)
    {
        printf("Queue is full");
    }
    else
    {
        printf("Enter the element to be inserted");
        scanf("%d",&item);
        if(front==-1)
        {
            front=0;
        }
        rear=rear+1;
        queue[rear]=item;
    }
}

void insert_front()
{
    int item;
    if(front==0)
    {
        printf("Queue is full");
    }
    else
    {
        printf("Enter the element to be inserted");
        scanf("%d",&item);
        if(front==-1)
        {
            front=0;
        }
        front=front-1;
        queue[front]=item;
    }
}

void delete_front()
{
    if(front==-1)
    {
        printf("Queue is empty");
    }
    else
    {
        printf("Deleted element is %d",queue[front]);
        if(front==rear)
        {
            front=-1;
            rear=-1;
        }
        else
        {
            front=front+1;
        }
    }
}

void delete_rear()
{
    if(front==-1)
    {
        printf("Queue is empty");
    }
    else
    {
        printf("Deleted element is %d",queue[rear]);
        if(front==rear)
        {
            front=-1;
            rear=-1;
        }
        else
        {
            rear=rear-1;
        }
    }
}

void display()
{
    int i;
    if(front==-1)
    {
        printf("Queue is empty");
    }
    else
    {
        printf("Queue is ");
        for(i=front;i<=rear;i++)
        {
            printf("%d",queue[i]);
        }
    }
}

int main()
{
    int choice;
    while(1)
    {
        printf(" 1.Insert at rear end 2.Insert at front end 3.Delete from front end 4.Delete from rear end 5.Display 6.Exit");
        printf("Enter your choice");
        scanf("%d",&choice);

        switch(choice)
        {
            case 1: insert_rear();
                    break;
            case 2: insert_front();
                    break;
            case 3: delete_front();
                    break;
            case 4: delete_rear();
                    break;
            case 5: display();
                    break;
            case 6: exit(0);
                    break;
            default: printf("Wrong choice");
        }
}
}

OUTPUT
 1.Insert at rear end 2.Insert at front end 3.Delete from front end 4.Delete from rear end 5.Display 6.ExitEnter your choice 1
Enter the element to be inserted 4
Display 4

